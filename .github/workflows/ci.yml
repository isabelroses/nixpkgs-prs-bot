name: Check & Publish & Release

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:
    branches:
      - main

permissions: {}

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Run Clippy
        run: cargo clippy --all-targets -- -D warnings

      - name: Run Tests
        run: cargo test --all

  publish:
    name: Publish
    needs: check
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Publish nixpkgs-prs
        run: cargo publish --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  generate-changelog:
    name: Generate Changelog
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')

    outputs:
      changelog: ${{ steps.git-cliff.outputs.changelog }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Generate CHANGELOG
        uses: orhun/git-cliff-action@v4
        id: git-cliff
        with:
          args: -vv --latest --strip header
          github_token: ${{ github.token }}

  build:
    name: Build
    needs: check

    runs-on: ${{ matrix.os }}

    permissions:
      contents: read
      id-token: write

    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-24.04-arm
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: aarch64-pc-windows-msvc
            os: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build nixpkgs-prs
        run: |
          cargo build --release --locked --target "$TARGET"
          if [ "$RUNNER_OS" = "Windows" ]; then
            mv "target/$TARGET/release/nixpkgs-prs.exe" "nixpkgs-prs-$RELEASE.exe"
          else
            mv "target/$TARGET/release/nixpkgs-prs" "nixpkgs-prs-$RELEASE"
          fi
        env:
          TARGET: ${{ matrix.target }}
          RELEASE: ${{ github.ref_name }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-${{ github.ref_name }}-${{ matrix.target }}
          path: nixpkgs-prs*

  release:
    name: Release
    needs: [check, generate-changelog, build]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Upload artifacts to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          body_path: ${{ needs.generate-changelog.outputs.changelog }}
          files: artifacts/*
        env:
          GITHUB_TOKEN: ${{ github.token }}
