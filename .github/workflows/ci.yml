name: Check & Publish & Release

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:
    branches:
      - main

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry and build
        uses: Swatinem/rust-cache@v2

      - name: Run Clippy
        run: cargo clippy --all-targets -- -D warnings

      - name: Run Tests
        run: cargo test --all

  publish:
    name: Publish
    needs: check
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Publish nixpkgs-prs
        run: cargo publish --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  generate-changelog:
    name: Generate Changelog
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate CHANGELOG
        uses: orhun/git-cliff-action@v4
        id: git-cliff
        with:
          args: -vv --latest --strip header
          github_token: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Release
    needs: [check, publish, generate-changelog]

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            ext: ""
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-24.04-arm
            ext: ""
          - target: x86_64-apple-darwin
            os: macos-latest
            ext: ""
          - target: aarch64-apple-darwin
            os: macos-latest
            ext: ""
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            ext: ".exe"
          - target: aarch64-pc-windows-msvc
            os: windows-latest
            ext: ".exe"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache cargo registry and build
        uses: Swatinem/rust-cache@v2

      - name: Build nixpkgs-prs
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package build artifacts
        run: |
          mkdir -p artifacts
          cp target/${{ matrix.target }}/release/nixpkgs-prs${{ matrix.ext }} artifacts/nixpkgs-prs-${{ matrix.target }}${{ matrix.ext }}

      - name: Upload artifacts to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          body_path: ${{ steps.git-cliff.outputs.changelog }}
          files: artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
